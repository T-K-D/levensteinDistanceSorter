<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="540pt" height="896pt"
 viewBox="0.00 0.00 540.00 896.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 892)">
<title>%3</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-892 536,-892 536,4 -4,4"/>
<!-- (below main) -->
<g id="node1" class="node"><title>(below main)</title>
<polygon fill="#ff0300" stroke="#ff0300" points="325,-682 258,-682 258,-618 325,-618 325,-682"/>
<text text-anchor="middle" x="291.5" y="-670" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.21.so</text>
<text text-anchor="middle" x="291.5" y="-647" font-family="Arial" font-size="10.00" fill="#ffffff">99.70%</text>
<text text-anchor="middle" x="291.5" y="-636" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="291.5" y="-625" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main -->
<g id="node2" class="node"><title>main</title>
<polygon fill="#ff0300" stroke="#ff0300" points="321.5,-578 261.5,-578 261.5,-515 321.5,-515 321.5,-578"/>
<text text-anchor="middle" x="291.5" y="-566" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="291.5" y="-555" font-family="Arial" font-size="10.00" fill="#ffffff">main</text>
<text text-anchor="middle" x="291.5" y="-544" font-family="Arial" font-size="10.00" fill="#ffffff">99.69%</text>
<text text-anchor="middle" x="291.5" y="-533" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="291.5" y="-522" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- (below main)&#45;&gt;main -->
<g id="edge1" class="edge"><title>(below main)&#45;&gt;main</title>
<path fill="none" stroke="#ff0300" stroke-width="3.99" d="M291.5,-617.995C291.5,-608.649 291.5,-598.244 291.5,-588.36"/>
<polygon fill="#ff0300" stroke="#ff0300" stroke-width="3.99" points="295,-588.315 291.5,-578.315 288,-588.315 295,-588.315"/>
<text text-anchor="middle" x="308.5" y="-601" font-family="Arial" font-size="10.00" fill="#ff0300">99.69%</text>
<text text-anchor="middle" x="308.5" y="-590" font-family="Arial" font-size="10.00" fill="#ff0300">1×</text>
</g>
<!-- LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;) -->
<g id="node6" class="node"><title>LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)</title>
<polygon fill="#fe0500" stroke="#fe0500" points="364,-475 219,-475 219,-412 364,-412 364,-475"/>
<text text-anchor="middle" x="291.5" y="-463" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="291.5" y="-452" font-family="Arial" font-size="10.00" fill="#ffffff">LevenshteinSorter::sortVector</text>
<text text-anchor="middle" x="291.5" y="-441" font-family="Arial" font-size="10.00" fill="#ffffff">99.48%</text>
<text text-anchor="middle" x="291.5" y="-430" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="291.5" y="-419" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;) -->
<g id="edge5" class="edge"><title>main&#45;&gt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)</title>
<path fill="none" stroke="#fe0500" stroke-width="3.98" d="M291.5,-514.923C291.5,-505.615 291.5,-495.232 291.5,-485.359"/>
<polygon fill="#fe0500" stroke="#fe0500" stroke-width="3.98" points="295,-485.322 291.5,-475.322 288,-485.322 295,-485.322"/>
<text text-anchor="middle" x="308.5" y="-498" font-family="Arial" font-size="10.00" fill="#fe0500">99.48%</text>
<text text-anchor="middle" x="308.5" y="-487" font-family="Arial" font-size="10.00" fill="#fe0500">1×</text>
</g>
<!-- 0x0000000000000c80 -->
<g id="node3" class="node"><title>0x0000000000000c80</title>
<polygon fill="#ff0000" stroke="#ff0000" points="347,-888 236,-888 236,-825 347,-825 347,-888"/>
<text text-anchor="middle" x="291.5" y="-876" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.21.so</text>
<text text-anchor="middle" x="291.5" y="-865" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000000000c80</text>
<text text-anchor="middle" x="291.5" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">100.00%</text>
<text text-anchor="middle" x="291.5" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="291.5" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0×</text>
</g>
<!-- _start -->
<g id="node4" class="node"><title>_start</title>
<polygon fill="#ff0300" stroke="#ff0300" points="321.5,-785 261.5,-785 261.5,-722 321.5,-722 321.5,-785"/>
<text text-anchor="middle" x="291.5" y="-773" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="291.5" y="-762" font-family="Arial" font-size="10.00" fill="#ffffff">_start</text>
<text text-anchor="middle" x="291.5" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">99.70%</text>
<text text-anchor="middle" x="291.5" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="291.5" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- 0x0000000000000c80&#45;&gt;_start -->
<g id="edge2" class="edge"><title>0x0000000000000c80&#45;&gt;_start</title>
<path fill="none" stroke="#ff0300" stroke-width="3.99" d="M291.5,-824.923C291.5,-815.615 291.5,-805.232 291.5,-795.359"/>
<polygon fill="#ff0300" stroke="#ff0300" stroke-width="3.99" points="295,-795.322 291.5,-785.322 288,-795.322 295,-795.322"/>
<text text-anchor="middle" x="308.5" y="-808" font-family="Arial" font-size="10.00" fill="#ff0300">99.70%</text>
<text text-anchor="middle" x="308.5" y="-797" font-family="Arial" font-size="10.00" fill="#ff0300">1×</text>
</g>
<!-- _start&#45;&gt;(below main) -->
<g id="edge4" class="edge"><title>_start&#45;&gt;(below main)</title>
<path fill="none" stroke="#ff0300" stroke-width="3.99" d="M291.5,-721.771C291.5,-712.504 291.5,-702.176 291.5,-692.337"/>
<polygon fill="#ff0300" stroke="#ff0300" stroke-width="3.99" points="295,-692.326 291.5,-682.326 288,-692.326 295,-692.326"/>
<text text-anchor="middle" x="308.5" y="-705" font-family="Arial" font-size="10.00" fill="#ff0300">99.70%</text>
<text text-anchor="middle" x="308.5" y="-694" font-family="Arial" font-size="10.00" fill="#ff0300">1×</text>
</g>
<!-- LevenshteinCalculator::compareWithTwoMatrixRows(std::string const&amp;) -->
<g id="node5" class="node"><title>LevenshteinCalculator::compareWithTwoMatrixRows(std::string const&amp;)</title>
<polygon fill="#fb1d01" stroke="#fb1d01" points="243,-269 0,-269 0,-206 243,-206 243,-269"/>
<text text-anchor="middle" x="121.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="121.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">LevenshteinCalculator::compareWithTwoMatrixRows</text>
<text text-anchor="middle" x="121.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">97.19%</text>
<text text-anchor="middle" x="121.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(97.04%)</text>
<text text-anchor="middle" x="121.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">999×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;) -->
<g id="node7" class="node"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)</title>
<polygon fill="#fe0900" stroke="#fe0900" points="354,-372 229,-372 229,-309 354,-309 354,-372"/>
<text text-anchor="middle" x="291.5" y="-360" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="291.5" y="-349" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__introsort_loop</text>
<text text-anchor="middle" x="291.5" y="-338" font-family="Arial" font-size="10.00" fill="#ffffff">99.14%</text>
<text text-anchor="middle" x="291.5" y="-327" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="291.5" y="-316" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;) -->
<g id="edge3" class="edge"><title>LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)</title>
<path fill="none" stroke="#fe0900" stroke-width="3.97" d="M291.5,-411.923C291.5,-402.615 291.5,-392.232 291.5,-382.359"/>
<polygon fill="#fe0900" stroke="#fe0900" stroke-width="3.97" points="295,-382.322 291.5,-372.322 288,-382.322 295,-382.322"/>
<text text-anchor="middle" x="308.5" y="-395" font-family="Arial" font-size="10.00" fill="#fe0900">99.14%</text>
<text text-anchor="middle" x="308.5" y="-384" font-family="Arial" font-size="10.00" fill="#fe0900">1×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;LevenshteinCalculator::compareWithTwoMatrixRows(std::string const&amp;) -->
<g id="edge8" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;LevenshteinCalculator::compareWithTwoMatrixRows(std::string const&amp;)</title>
<path fill="none" stroke="#fb1d01" stroke-width="3.89" d="M235.928,-308.92C230.694,-305.939 225.485,-302.933 220.5,-300 206.708,-291.886 191.989,-282.916 178.232,-274.393"/>
<polygon fill="#fb1d01" stroke="#fb1d01" stroke-width="3.89" points="180.045,-271.44 169.808,-269.155 176.386,-277.325 180.045,-271.44"/>
<text text-anchor="middle" x="237.5" y="-292" font-family="Arial" font-size="10.00" fill="#fb1d01">97.19%</text>
<text text-anchor="middle" x="237.5" y="-281" font-family="Arial" font-size="10.00" fill="#fb1d01">999×</text>
</g>
<!-- std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const -->
<g id="node9" class="node"><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const</title>
<polygon fill="#0d1174" stroke="#0d1174" points="350,-166 235,-166 235,-103 350,-103 350,-166"/>
<text text-anchor="middle" x="292.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="292.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable::count</text>
<text text-anchor="middle" x="292.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">1.11%</text>
<text text-anchor="middle" x="292.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.18%)</text>
<text text-anchor="middle" x="292.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">18724×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const -->
<g id="edge9" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M278.08,-308.877C273.433,-296.713 268.812,-282.438 266.5,-269 261.752,-241.405 261.579,-233.564 266.5,-206 268.682,-193.78 272.834,-180.903 277.19,-169.547"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="278.414,-169.78 278.546,-166.074 276.132,-168.889 278.414,-169.78"/>
<text text-anchor="middle" x="280.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.14%</text>
<text text-anchor="middle" x="280.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0d73">2874×</text>
</g>
<!-- std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;) -->
<g id="node10" class="node"><title>std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="532,-166 359,-166 359,-103 532,-103 532,-166"/>
<text text-anchor="middle" x="445.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="445.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Map_base::operator[]</text>
<text text-anchor="middle" x="445.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">1.13%</text>
<text text-anchor="middle" x="445.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.14%)</text>
<text text-anchor="middle" x="445.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">18724×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;) -->
<g id="edge10" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M354.099,-332.466C394.369,-324.334 443.814,-306.801 469.5,-269 489.467,-239.615 477.565,-198.5 464.421,-169.685"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="465.402,-168.89 462.814,-166.234 463.181,-169.924 465.402,-168.89"/>
<text text-anchor="middle" x="494.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.19%</text>
<text text-anchor="middle" x="494.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0e73">2874×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2 -->
<g id="node11" class="node"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2</title>
<polygon fill="#0d1375" stroke="#0d1375" points="430,-269 299,-269 299,-206 430,-206 430,-269"/>
<text text-anchor="middle" x="364.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">mainExec</text>
<text text-anchor="middle" x="364.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__introsort_loop&#39;2</text>
<text text-anchor="middle" x="364.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.61%</text>
<text text-anchor="middle" x="364.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="364.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">93×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2 -->
<g id="edge11" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M313.601,-308.923C321.957,-297.361 331.512,-284.141 340.07,-272.301"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="341.165,-272.876 342.223,-269.322 339.18,-271.441 341.165,-272.876"/>
<text text-anchor="middle" x="349.5" y="-292" font-family="Arial" font-size="10.00" fill="#0d1375">1.61%</text>
<text text-anchor="middle" x="349.5" y="-281" font-family="Arial" font-size="10.00" fill="#0d1375">6×</text>
</g>
<!-- std::_Hash_bytes(void const*, unsigned long, unsigned long) -->
<g id="node8" class="node"><title>std::_Hash_bytes(void const*, unsigned long, unsigned long)</title>
<polygon fill="#0d1375" stroke="#0d1375" points="432,-63 331,-63 331,-0 432,-0 432,-63"/>
<text text-anchor="middle" x="381.5" y="-51" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="381.5" y="-40" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hash_bytes</text>
<text text-anchor="middle" x="381.5" y="-29" font-family="Arial" font-size="10.00" fill="#ffffff">1.45%</text>
<text text-anchor="middle" x="381.5" y="-18" font-family="Arial" font-size="10.00" fill="#ffffff">(1.45%)</text>
<text text-anchor="middle" x="381.5" y="-7" font-family="Arial" font-size="10.00" fill="#ffffff">37448×</text>
</g>
<!-- std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const&#45;&gt;std::_Hash_bytes(void const*, unsigned long, unsigned long) -->
<g id="edge6" class="edge"><title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const&#45;&gt;std::_Hash_bytes(void const*, unsigned long, unsigned long)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M319.444,-102.923C329.718,-91.2633 341.479,-77.9168 351.98,-66"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="352.945,-66.7579 354.34,-63.3221 351.107,-65.1381 352.945,-66.7579"/>
<text text-anchor="middle" x="362" y="-86" font-family="Arial" font-size="10.00" fill="#0d1074">0.72%</text>
<text text-anchor="middle" x="362" y="-75" font-family="Arial" font-size="10.00" fill="#0d1074">18724×</text>
</g>
<!-- std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;)&#45;&gt;std::_Hash_bytes(void const*, unsigned long, unsigned long) -->
<g id="edge7" class="edge"><title>std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;)&#45;&gt;std::_Hash_bytes(void const*, unsigned long, unsigned long)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M426.124,-102.923C418.798,-91.3613 410.421,-78.1409 402.918,-66.3007"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="403.939,-65.6228 401.031,-63.3221 401.869,-66.9342 403.939,-65.6228"/>
<text text-anchor="middle" x="436" y="-86" font-family="Arial" font-size="10.00" fill="#0d1074">0.72%</text>
<text text-anchor="middle" x="436" y="-75" font-family="Arial" font-size="10.00" fill="#0d1074">18724×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const -->
<g id="edge12" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;std::_Hashtable&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::count(std::string const&amp;) const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M342.702,-205.923C334.461,-194.361 325.036,-181.141 316.596,-169.301"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="317.501,-168.461 314.472,-166.322 315.506,-169.883 317.501,-168.461"/>
<text text-anchor="middle" x="352" y="-189" font-family="Arial" font-size="10.00" fill="#0d1074">0.81%</text>
<text text-anchor="middle" x="352" y="-178" font-family="Arial" font-size="10.00" fill="#0d1074">13128×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;) -->
<g id="edge13" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;std::__detail::_Map_base&lt;std::string, std::pair&lt;std::string const, int&gt;, std::allocator&lt;std::pair&lt;std::string const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[](std::string const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M389.022,-205.923C398.294,-194.361 408.897,-181.141 418.393,-169.301"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="419.547,-169.819 420.781,-166.322 417.636,-168.286 419.547,-169.819"/>
<text text-anchor="middle" x="429" y="-189" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="429" y="-178" font-family="Arial" font-size="10.00" fill="#0d1074">13128×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2 -->
<g id="edge14" class="edge"><title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;LevenshteinSorter::sortVector(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;&amp;)::{lambda(std::string const&amp;, std::string const&amp;)#1}&gt;)&#39;2</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M430.373,-244.675C435.699,-243.114 439,-240.723 439,-237.5 439,-235.083 437.143,-233.133 433.968,-231.651"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="434.081,-230.387 430.373,-230.325 433.232,-232.686 434.081,-230.387"/>
<text text-anchor="middle" x="447.5" y="-235" font-family="Arial" font-size="10.00" fill="#0d1375">87×</text>
</g>
</g>
</svg>
